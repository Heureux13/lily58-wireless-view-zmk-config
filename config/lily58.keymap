/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    macros {
        Slash_0: Slash_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kt LEFT_ALT>;
            label = "SLASH_0";
        };

        GG: GG {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp LS(G) &kp LS(G) &kp SPACE &kp LS(W) &kp LS(P) &kp LC(NUMBER_1) &kp ENTER &kp F10 &kp N>;
            label = "GG";
        };

        GL_HF: GL_HF {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp LS(G) &kp LS(L) &kp SPACE &kp LS(H) &kp LS(F) &kp ENTER>;
            label = "GL_HF";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Work";
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5            &kp NUMBER_6                           &kp N7  &kp N8             &kp N9         &kp N0   &kp MINUS  &kp BACKSPACE
&kp TAB         &kp Q         &kp W         &kp E         &kp R             &kp T                                  &kp Y   &kp U              &kp I          &kp O    &kp P      &kp BACKSLASH
&kp CAPSLOCK    &kp A         &kp S         &kp D         &kp F             &kp G                                  &kp H   &kp J              &kp K          &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V             &kp B         &kp ESCAPE    &kp DEL    &kp N   &kp M              &kp COMMA      &kp DOT  &kp FSLH   &kp RSHFT
                                            &kp LEFT_ALT  &kp LEFT_CONTROL  &mo 1         &kp ENTER     &kp SPACE  &mo 1   &kp RIGHT_CONTROL  &kp RIGHT_WIN
            >;
        };

        Base_1 {
            bindings = <
&kp F1            &kp F2                   &kp F3           &kp F4           &kp F5            &kp F6                                  &kp F7                &kp F8             &kp F9          &kp F10      &kp F11             &kp F12
&kp LG(LC(LEFT))  &kp LG(LC(RIGHT_ARROW))  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9   &Slash_0                                &kp KP_SUBTRACT       &kp BACKSPACE      &kp UP_ARROW    &kp DELETE   &kp LC(LEFT_ARROW)  &kp LC(RIGHT)
&kp PRINTSCREEN   &kp KP_NUMBER_0          &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6   &kp PERIOD                              &kp LEFT_PARENTHESIS  &kp LEFT           &kp DOWN_ARROW  &kp RIGHT    &none               &none
&sl 2             &kp MINUS                &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3   &kp X       &kp BACKSPACE    &mkp LCLK  &kp EQUAL             &kp KP_MULTIPLY    &kp KP_DIVIDE   &kp KP_PLUS  &kp KP_SUBTRACT     &to 5
                                                            &kp LEFT_ALT     &kp LEFT_CONTROL  &none       &trans           &kp ENTER  &none                 &kp RIGHT_CONTROL  &kp RIGHT_ALT
            >;
        };

        Base_2 {
            bindings = <
&kp LS(LA(LC(N1)))  &kp LS(LA(LC(N2)))  &kp N3         &kp N4  &kp N5         &kp N6                    &kp N7  &kp N8  &kp N9  &kp N0     &kp MINUS  &kp HOME
&kp LC(LEFT)        &kp LC(RIGHT)       &kp W          &kp E   &kp R          &kp T                     &kp Y   &kp U   &kp I   &kp O      &kp P      &kp PAGE_UP
&kp CAPSLOCK        &kp A               &kp LC(LA(S))  &kp D   &kp LC(LS(M))  &kp G                     &kp H   &kp J   &kp K   &kp L      &kp SEMI   &kp PAGE_DOWN
&kp LEFT_SHIFT      &kp Z               &kp LC(LA(X))  &kp C   &kp LG(V)      &kp B   &trans    &trans  &kp B   &kp N   &kp M   &kp COMMA  &kp DOT    &kp END
                                                       &trans  &trans         &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        Starcraft_2 {
            display-name = "SC2";
            bindings = <
&kp B           &kp V  &kp N1  &kp N2  &kp N3  &kp N4                                       &GL_HF  &kp N8             &kp N9         &kp N0   &kp MINUS  &GG
&kp TAB         &kp Q  &kp W   &kp E   &kp N5  &kp N6                                       &kp Y   &kp U              &kp I          &kp O    &kp P      &kp BACKSLASH
&kp CAPSLOCK    &kp A  &kp S   &kp D   &kp N7  &kp N8                                       &kp H   &kp J              &kp K          &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X   &kp C   &kp N9  &kp N0        &kp ESCAPE          &kp ENTER  &kp N   &kp M              &kp COMMA      &kp DOT  &kp FSLH   &kp RSHFT
                               &kp V   &kp B   &kp LEFT_ALT  &kp LEFT_CONTROL    &kp SPACE  &to 0   &kp RIGHT_CONTROL  &kp RIGHT_WIN
            >;
        };

        Shooters {
            display-name = "Pew Pew";
            bindings = <
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5        &kp NUMBER_6                                       &kp N7  &kp N8             &kp N9         &kp N0   &kp F12   &kp BACKSPACE
&kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                                              &kp Y   &kp U              &kp I          &kp O    &kp P     &kp NON_US_BACKSLASH
&kp CAPS      &kp A         &kp S         &kp D         &kp F         &kp G                                              &kp H   &kp J              &kp K          &kp L    &kp SEMI  &kp SQT
&kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B             &kp ESCAPE            &kp ENTER  &kp N   &kp M              &kp COMMA      &kp DOT  &kp FSLH  &kp RSHFT
                                          &kp LEFT_ALT  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LS(LEFT_SHIFT)    &kp SPACE  &mo 5   &kp RIGHT_CONTROL  &kp RIGHT_ALT
            >;
        };

        Layers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&to 3   &to 4   &none   &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &to 0
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
