/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <300>;
};

/ {
    macros {
        Slash_0: Slash_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kt LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_6 &kt LEFT_ALT>;
            label = "SLASH_0";
        };

        GG: GG {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp LS(G) &kp LS(G) &kp SPACE &kp LS(W) &kp LS(P) &kp ENTER &kp F10 &kp N>;
            label = "GG";
        };

        GL_HF: GL_HF {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ENTER &kp LS(G) &kp LS(L) &kp SPACE &kp LS(H) &kp LS(F) &kp ENTER>;
            label = "GL_HF";
        };

        Copy_4: copy_paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB1 &mkp MB1 &mkp MB1 &kp BACKSPACE &kp NUMBER_4 &kp ENTER>;
            label = "COPY_PASTE";
        };

        Copy_5: Copy_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&mkp MB1 &mkp MB1 &mkp MB1 &kp BACKSPACE &kp N5 &kp ENTER>;
            label = "COPY_5";
        };
    };

    behaviors {
        CpsLk_to6: CpsLk_to6 {
            compatible = "zmk,behavior-tap-dance";
            label = "CPSLK_TO6";
            #binding-cells = <0>;
            bindings = <&kp CAPSLOCK>, <&none>, <&none>, <&to 6>;

            tapping-term-ms = <200>;
        };

        ESC_SPACE: ESC_SPACE {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC_SPACE";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&kp SPACE>;

            tapping-term-ms = <200>;
        };

        Control_Backspace: Control_Backspace {
            compatible = "zmk,behavior-tap-dance";
            label = "CONTROL_BACKSPACE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL>, <&kp BACKSPACE>;
        };

        Shift_Space: Shift_Space {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_SPACE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp SPACE>;

            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            display-name = "Home";
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6                                             &kp N7             &kp N8  &kp N9         &kp N0   &kp MINUS  &kp BACKSPACE
&kp TAB         &kp Q         &kp W         &kp E         &kp R   &kp T                                                    &kp Y              &kp U   &kp I          &kp O    &kp P      &kp BACKSLASH
&kp CAPSLOCK    &kp A         &kp S         &kp D         &kp F   &kp G                                                    &kp H              &kp J   &kp K          &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V   &kp B             &mt DELETE ESCAPE    &mt DELETE ENTER  &kp N              &kp M   &kp COMMA      &kp DOT  &kp FSLH   &kp RSHFT
                                            &kp LEFT_ALT  &mo 5   &kp LEFT_CONTROL  &lt 4 ENTER          &lt 4 SPACE       &kp RIGHT_CONTROL  &mo 5   &kp RIGHT_WIN
            >;
        };

        Double_Stack {
            display-name = "2X";
            bindings = <
&kp NUMBER_1    &kp NUMBER_2     &kp NUMBER_3  &kp NUMBER_4  &kp N5   &kp NUMBER_6                                             &kp N7             &kp N8  &kp N9         &kp N0   &kp MINUS  &kp BACKSPACE
&kp TAB         &mt P Q          &mt O W       &mt I E       &mt U R  &mt Y T                                                  &kp Y              &kp U   &kp I          &kp O    &kp P      &kp BACKSLASH
&CpsLk_to6      &mt SEMICOLON A  &mt L S       &mt K D       &mt J F  &mt H G                                                  &kp H              &kp J   &kp K          &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &mt SLASH Z      &mt PERIOD X  &mt COMMA C   &mt M V  &mt N B           &mt DELETE ESCAPE    &mt DELETE ENTER  &kp N              &kp M   &kp COMMA      &kp DOT  &kp FSLH   &kp RSHFT
                                               &kp LEFT_ALT  &mo 5    &kp LEFT_CONTROL  &lt 4 ENTER          &lt 4 SPACE       &kp RIGHT_CONTROL  &mo 5   &kp RIGHT_WIN
            >;
        };

        Starcraft {
            display-name = "RTS";
            bindings = <
&kp N1      &kp N2       &kp N3       &kp N4     &mt LA(N5) N5  &mt LA(N6) NUMBER_6                               &kp N7             &kp N8  &kp N9         &kp N0   &kp MINUS  &kp BACKSPACE
&kp TAB     &mt LA(Q) Q  &mt LA(W) W  &kp E      &mt LA(R) R    &mt LA(T) T                                       &kp Y              &kp U   &kp I          &kp O    &kp P      &kp BACKSLASH
&CpsLk_to6  &kp A        &mt LA(S) S  &kp D      &mt LA(F) F    &mt LA(G) G                                       &kp H              &kp J   &kp K          &kp L    &kp SEMI   &kp SQT
&kp Y       &kp Z        &mt LA(X) X  &kp C      &kp V          &kp B                &ESC_SPACE        &kp ENTER  &kp N              &kp M   &kp COMMA      &kp DOT  &kp FSLH   &kp RSHFT
                                      &kp SPACE  &kp LEFT_ALT   &kp LEFT_CONTROL     &kp LEFT_SHIFT    &kp SPACE  &kp RIGHT_CONTROL  &mo 6   &kp RIGHT_ALT
            >;
        };

        Shooters {
            display-name = "Pew Pew";
            bindings = <
&kp NUMBER_1    &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5  &kp NUMBER_6                                            &kp N7             &kp N8  &kp N9         &kp N0   &kp MINUS  &kp BACKSPACE
&kp TAB         &kp Q         &kp W         &kp E         &kp R   &kp T                                                   &kp Y              &kp U   &kp I          &kp O    &kp P      &kp BACKSLASH
&CpsLk_to6      &kp A         &kp S         &kp D         &kp F   &kp G                                                   &kp H              &kp J   &kp K          &kp L    &kp SEMI   &kp SQT
&kp LEFT_SHIFT  &kp Z         &kp X         &kp C         &kp V   &kp B             &mt ENTER ESCAPE    &mt DELETE ENTER  &kp N              &kp M   &kp COMMA      &kp DOT  &kp FSLH   &kp RSHFT
                                            &kp LEFT_ALT  &mo 4   &kp LEFT_CONTROL  &kp SPACE           &kp SPACE         &kp RIGHT_CONTROL  &mo 4   &kp RIGHT_WIN
            >;
        };

        Secondary {
            bindings = <
&kp F1                    &kp F2                       &kp F3           &kp F4           &kp F5           &kp F6                                        &kp F7                &kp F8           &kp F9          &kp F10      &kp F11                &kp F12
&mt LG(LC(LEFT)) PAGE_UP  &mt LC(LG(RIGHT)) PAGE_DOWN  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &Slash_0                                      &kp KP_SUBTRACT       &kp BACKSPACE    &kp UP_ARROW    &kp DELETE   &kp HOME               &kp END
&kp PRINTSCREEN           &kp KP_NUMBER_0              &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PERIOD                                    &kp LEFT_PARENTHESIS  &kp LEFT         &kp DOWN_ARROW  &kp RIGHT    &kp RIGHT_PARENTHESIS  &none
&mo 5                     &kp MINUS                    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp X             &kp BACKSPACE    &mkp LCLK  &kp EQUAL             &kp KP_MULTIPLY  &kp KP_DIVIDE   &kp KP_PLUS  &kp KP_SUBTRACT        &to 6
                                                                        &kp LEFT_ALT     &to 4            &kp LEFT_CONTROL  &kp ENTER        &kp ENTER  &kp RIGHT_CONTROL     &none            &kp RIGHT_ALT
            >;
        };

        Bluebeam {
            bindings = <
&kp LS(LA(LC(N1)))  &kp LS(LA(LC(N2)))  &kp N3         &kp LA(F4)     &kp N5         &kp N6                  &kp HOME  &kp N8  &kp N9  &kp N0     &Copy_4   &none
&none               &none               &kp W          &kp LC(LS(L))  &kp R          &kp T                   &kp END   &kp U   &kp I   &kp O      &Copy_5   &none
&none               &kp A               &kp LC(LA(S))  &none          &kp LC(LS(M))  &kp G                   &kp H     &kp J   &kp K   &kp L      &kp SEMI  &none
&kp LEFT_SHIFT      &kp Z               &kp LC(LA(X))  &kp C          &kp LG(V)      &kp B   &none    &none  &kp B     &kp N   &kp M   &kp COMMA  &none     &to 6
                                                       &none          &none          &none   &none    &none  &none     &none   &none
            >;
        };

        Layers {
            bindings = <
&to 2  &to 3  &none  &none  &none  &none                  &GL_HF  &none  &none  &none  &none  &GG
&none  &none  &none  &none  &none  &none                  &none   &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none                  &none   &none  &none  &none  &none  &to 1
&none  &none  &none  &none  &none  &none  &none    &none  &none   &none  &none  &none  &none  &to 0
                     &none  &none  &none  &none    &none  &none   &none  &none
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
